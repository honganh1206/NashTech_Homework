{
	"info": {
		"_postman_id": "0522b1d1-6006-49f0-82c8-2335f722fe64",
		"name": "[Rookies Batch 6] Pham Hong Anh - API Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24323766"
	},
	"item": [
		{
			"name": "Request 04",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"04_Issue a GET request on the `/todo` end point should 404 because nouns should be plural\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todo",
					"host": [
						"{{url}}"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 05",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"05_Issue a GET request on the `/todos/{id}` end point to return a specific todo\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Could not find an instance with todos\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todos/991",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"991"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 06",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"06_Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"06_Issue a GET request on the `/todos/{id}` end point for a todo that does not exist\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Could not find an instance with todos\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todos/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 07",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"07_Issue a HEAD request on the `/todos` end point\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 08",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"08_Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"08_Issue a POST request to successfully create a todo\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"create todo process payroll\",\r\n    \"doneStatus\": true,\r\n    \"description\": \"\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 09",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"09_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"09_Issue a GET request on the `/todos` end point with a query filter to get only todos which are 'done'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"true\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "false",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"10_Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"10_Issue a POST request to create a todo but fail validation on the `doneStatus` field\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Failed Validation: doneStatus should be BOOLEAN\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"title\": \"create new todo\",\r\n        \"doneStatus\": \"Hong Anh\",\r\n        \"description\": \"created via postman\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 11",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"11_Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"11_Issue a POST request to successfully update a todo\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"update todo\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"title\": \"update todo\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/todos/1767",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"1767"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 12",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"12_Status code is 200 when deleting id 1763 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/todos/1763",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"1763"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 13",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"13_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"13_Issue an OPTIONS request on the `/todos` end point. You might want to manually check the 'Allow' header in the response is as expected.\", function () {\r",
							"   var responseHeaders = pm.response.headers.all();\r",
							"   var allowMethod = Object.values(responseHeaders[2]);\r",
							"   pm.expect(allowMethod[1]).to.include(\"OPTIONS, GET, HEAD, POST\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [],
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	]
}